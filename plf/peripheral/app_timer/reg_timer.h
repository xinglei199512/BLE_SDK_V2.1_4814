#ifndef __REG_TIMER_H__
#define __REG_TIMER_H__
#include <stdint.h>

typedef struct
{
    struct
    {
        volatile uint32_t TIMERLOADCOUNT;
        volatile uint32_t TIMERCURRENTVALUE ;
        volatile uint32_t TIMERCONTROLREG;
        volatile uint32_t TIMEREOI;
        volatile uint32_t TIMERINTSTATUS;
    }ch[2];

    volatile uint32_t reserved0[30];
    volatile uint32_t TIMERSINTSTATUS;
    volatile uint32_t TIMERSEOI;
    volatile uint32_t TIMERSRAWINTSTATUS;
    volatile uint32_t TIMERSCOMPONENTVERSION;
}reg_timer_t;

enum TIMER_TIMERLOADCOUNT_FIELD
{
    TIMER_TIMERLOADCOUNTREGISTER_MASK = 0xffffff,
    TIMER_TIMERLOADCOUNTREGISTER_POS = 0,
};

enum TIMER_TIMERCURRENTVALUE_FIELD
{
    TIMER_TIMERCURRENTVALUEREGISTER_MASK = 0xffffff,
    TIMER_TIMERCURRENTVALUEREGISTER_POS = 0,
};

enum TIMER_TIMERCONTROLREG_FIELD
{
    TIMER_TIMERINTERRUPTMASK_MASK = 0x4,
    TIMER_TIMERINTERRUPTMASK_POS = 2,
    TIMER_TIMERMODE_MASK = 0x2,
    TIMER_TIMERMODE_POS = 1,
    TIMER_TIMERENABLE_MASK = 0x1,
    TIMER_TIMERENABLE_POS = 0,
};

enum TIMER_TIMEREOI_FIELD
{
    TIMER_TIMERENDOFINTERRUPTREGISTER_MASK = 0x1,
    TIMER_TIMERENDOFINTERRUPTREGISTER_POS = 0,
};

enum TIMER_TIMERINTSTATUS_FIELD
{
    TIMER_TIMERINTERRUPTSTATUSREGISTER_MASK = 0x1,
    TIMER_TIMERINTERRUPTSTATUSREGISTER_POS = 0,
};

enum TIMER_TIMERSINTSTATUS_FIELD
{
    TIMER_TIMERSINTERRUPTSTATUSREGISTER_MASK = 0x3,
    TIMER_TIMERSINTERRUPTSTATUSREGISTER_POS = 0,
};

enum TIMER_TIMERSEOI_FIELD
{
    TIMER_TIMERSENDOFINTERRUPTREGISTER_MASK = 0x3,
    TIMER_TIMERSENDOFINTERRUPTREGISTER_POS = 0,
};

enum TIMER_TIMERSRAWINTSTATUS_FIELD
{
    TIMER_TIMERSRAWINTERRUPTSTATUSREGISTER_MASK = 0x3,
    TIMER_TIMERSRAWINTERRUPTSTATUSREGISTER_POS = 0,
};

enum TIMER_TIMERSCOMPONENTVERSION_FIELD
{
    TIMER_TIMERSCOMPONENTVERSIONREGISTER_MASK = (int)0xffffffffL,
    TIMER_TIMERSCOMPONENTVERSIONREGISTER_POS = 0,
};

#endif
