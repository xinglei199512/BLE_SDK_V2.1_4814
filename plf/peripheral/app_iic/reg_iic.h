#ifndef __REG_IIC_H__
#define __REG_IIC_H__
#include <stdint.h>

typedef struct
{
    volatile uint32_t IC_CON;
    volatile uint32_t IC_TAR;
    volatile uint32_t IC_SAR;
    volatile uint32_t IC_HS_MADDR;
    volatile uint32_t IC_DATA_CMD;
    volatile uint32_t IC_SS_SCL_HCNT;
    volatile uint32_t IC_SS_SCL_LCNT;
    volatile uint32_t IC_FS_SCL_HCNT;
    volatile uint32_t IC_FS_SCL_LCNT;
    volatile uint32_t IC_HS_SCL_HCNT;
    volatile uint32_t IC_HS_SCL_LCNT;
    volatile uint32_t IC_INTR_STAT;
    volatile uint32_t IC_INTR_MASK;
    volatile uint32_t IC_RAW_INTR_STAT;
    volatile uint32_t IC_RX_TL;
    volatile uint32_t IC_TX_TL;
    volatile uint32_t IC_CLR_INTR;
    volatile uint32_t IC_CLR_RX_UNDER;
    volatile uint32_t IC_CLR_RX_OVER;
    volatile uint32_t IC_CLR_TX_OVER;
    volatile uint32_t IC_CLR_RD_REQ;
    volatile uint32_t IC_CLR_TX_ABRT;
    volatile uint32_t IC_CLR_RX_DONE;
    volatile uint32_t IC_CLR_ACTIVITY;
    volatile uint32_t IC_CLR_STOP_DET;
    volatile uint32_t IC_CLR_START_DET;
    volatile uint32_t IC_CLR_GEN_CALL;
    volatile uint32_t IC_ENABLE;
    volatile uint32_t IC_STATUS;
    volatile uint32_t IC_TXFLR;
    volatile uint32_t IC_RXFLR;
    volatile uint32_t IC_SDA_HOLD;
    volatile uint32_t IC_TX_ABRT_SOURCE;
    volatile uint32_t IC_SLV_DATA_NACK_ONLY;
    volatile uint32_t IC_DMA_CR;
    volatile uint32_t IC_DMA_TDLR;
    volatile uint32_t IC_DMA_RDLR;
    volatile uint32_t IC_SDA_SETUP;
    volatile uint32_t IC_ACK_GENERAL_CALL;
    volatile uint32_t IC_ENABLE_STATUS;
    volatile uint32_t IC_FS_SPKLEN;
    volatile uint32_t IC_HS_SPKLEN;
    volatile uint32_t IC_CLR_RESTART_DET;
    volatile uint32_t reserved0[18];
    volatile uint32_t IC_COMP_PARAM_1;
    volatile uint32_t IC_COMP_VERSION;
    volatile uint32_t IC_COMP_TYPE;
}reg_iic_t;

enum IIC_IC_CON_FIELD
{
    IIC_RX_FIFO_FULL_HLD_CTRL_MASK = 0x200,
    IIC_RX_FIFO_FULL_HLD_CTRL_POS = 9,
    IIC_TX_EMPTY_CTRL_MASK = 0x100,
    IIC_TX_EMPTY_CTRL_POS = 8,
    IIC_STOP_DET_IFADDRESSED_MASK = 0x80,
    IIC_STOP_DET_IFADDRESSED_POS = 7,
    IIC_IC_SLAVE_DISABLE_MASK = 0x40,
    IIC_IC_SLAVE_DISABLE_POS = 6,
    IIC_IC_RESTART_EN_MASK = 0x20,
    IIC_IC_RESTART_EN_POS = 5,
    IIC_IC_10BITADDR_MASTER_MASK = 0x10,
    IIC_IC_10BITADDR_MASTER_POS = 4,
    IIC_IC_10BITADDR_SLAVE_MASK = 0x8,
    IIC_IC_10BITADDR_SLAVE_POS = 3,
    IIC_SPEED_MASK = 0x6,
    IIC_SPEED_POS = 1,
    IIC_MASTER_MODE_MASK = 0x1,
    IIC_MASTER_MODE_POS = 0,
};

enum IIC_IC_TAR_FIELD
{
    IIC_SPECIAL_MASK = 0x800,
    IIC_SPECIAL_POS = 11,
    IIC_GC_OR_START_MASK = 0x400,
    IIC_GC_OR_START_POS = 10,
    IIC_TAR_MASK = 0x3ff,
    IIC_TAR_POS = 0,
};

enum IIC_IC_SAR_FIELD
{
    IIC_SAR_MASK = 0x3ff,
    IIC_SAR_POS = 0,
};

enum IIC_IC_HS_MADDR_FIELD
{
    IIC_HS_MAR_MASK = 0x7,
    IIC_HS_MAR_POS = 0,
};

enum IIC_IC_DATA_CMD_FIELD
{
    IIC_FIRST_DATA_BYTE_MASK = 0x800,
    IIC_FIRST_DATA_BYTE_POS = 11,
    IIC_RESTART_MASK = 0x400,
    IIC_RESTART_POS = 10,
    IIC_STOP_MASK = 0x200,
    IIC_STOP_POS = 9,
    IIC_CMD_MASK = 0x100,
    IIC_CMD_POS = 8,
    IIC_DAT_MASK = 0xff,
    IIC_DAT_POS = 0,
};

enum IIC_IC_SS_SCL_HCNT_FIELD
{
    IIC_SS_SCL_HCNT_MASK = 0xffff,
    IIC_SS_SCL_HCNT_POS = 0,
};

enum IIC_IC_SS_SCL_LCNT_FIELD
{
    IIC_SS_SCL_LCNT_MASK = 0xffff,
    IIC_SS_SCL_LCNT_POS = 0,
};

enum IIC_IC_FS_SCL_HCNT_FIELD
{
    IIC_FS_SCL_HCNT_MASK = 0xffff,
    IIC_FS_SCL_HCNT_POS = 0,
};

enum IIC_IC_FS_SCL_LCNT_FIELD
{
    IIC_FS_SCL_LCNT_MASK = 0xffff,
    IIC_FS_SCL_LCNT_POS = 0,
};

enum IIC_IC_HS_SCL_HCNT_FIELD
{
    IIC_HS_SCL_HCNT_MASK = 0xffff,
    IIC_HS_SCL_HCNT_POS = 0,
};

enum IIC_IC_HS_SCL_LCNT_FIELD
{
    IIC_HS_SCL_LCNT_MASK = 0xffff,
    IIC_HS_SCL_LCNT_POS = 0,
};

enum IIC_IC_INTR_STAT_FIELD
{
    IIC_R_SCL_STUCK_AT_LOW_MASK = 0x4000,
    IIC_R_SCL_STUCK_AT_LOW_POS = 14,
    IIC_R_MST_ON_HOLD_MASK = 0x2000,
    IIC_R_MST_ON_HOLD_POS = 13,
    IIC_R_RESTART_DET_MASK = 0x1000,
    IIC_R_RESTART_DET_POS = 12,
    IIC_R_GEN_CALL_MASK = 0x800,
    IIC_R_GEN_CALL_POS = 11,
    IIC_R_START_DET_MASK = 0x400,
    IIC_R_START_DET_POS = 10,
    IIC_R_STOP_DET_MASK = 0x200,
    IIC_R_STOP_DET_POS = 9,
    IIC_R_ACTIVITY_MASK = 0x100,
    IIC_R_ACTIVITY_POS = 8,
    IIC_R_RX_DONE_MASK = 0x80,
    IIC_R_RX_DONE_POS = 7,
    IIC_R_TX_ABRT_MASK = 0x40,
    IIC_R_TX_ABRT_POS = 6,
    IIC_R_RD_REQ_MASK = 0x20,
    IIC_R_RD_REQ_POS = 5,
    IIC_R_TX_EMPTY_MASK = 0x10,
    IIC_R_TX_EMPTY_POS = 4,
    IIC_R_TX_OVER_MASK = 0x8,
    IIC_R_TX_OVER_POS = 3,
    IIC_R_RX_FULL_MASK = 0x4,
    IIC_R_RX_FULL_POS = 2,
    IIC_R_RX_OVER_MASK = 0x2,
    IIC_R_RX_OVER_POS = 1,
    IIC_R_RX_UNDER_MASK = 0x1,
    IIC_R_RX_UNDER_POS = 0,
};

enum IIC_IC_INTR_MASK_FIELD
{
    IIC_M_SCL_STUCK_AT_LOW_MASK = 0x4000,
    IIC_M_SCL_STUCK_AT_LOW_POS = 14,
    IIC_M_MST_ON_HOLD_MASK = 0x2000,
    IIC_M_MST_ON_HOLD_POS = 13,
    IIC_M_RESTART_DET_MASK = 0x1000,
    IIC_M_RESTART_DET_POS = 12,
    IIC_M_GEN_CALL_MASK = 0x800,
    IIC_M_GEN_CALL_POS = 11,
    IIC_M_START_DET_MASK = 0x400,
    IIC_M_START_DET_POS = 10,
    IIC_M_STOP_DET_MASK = 0x200,
    IIC_M_STOP_DET_POS = 9,
    IIC_M_ACTIVITY_MASK = 0x100,
    IIC_M_ACTIVITY_POS = 8,
    IIC_M_RX_DONE_MASK = 0x80,
    IIC_M_RX_DONE_POS = 7,
    IIC_M_TX_ABRT_MASK = 0x40,
    IIC_M_TX_ABRT_POS = 6,
    IIC_M_RD_REQ_MASK = 0x20,
    IIC_M_RD_REQ_POS = 5,
    IIC_M_TX_EMPTY_MASK = 0x10,
    IIC_M_TX_EMPTY_POS = 4,
    IIC_M_TX_OVER_MASK = 0x8,
    IIC_M_TX_OVER_POS = 3,
    IIC_M_RX_FULL_MASK = 0x4,
    IIC_M_RX_FULL_POS = 2,
    IIC_M_RX_OVER_MASK = 0x2,
    IIC_M_RX_OVER_POS = 1,
    IIC_M_RX_UNDER_MASK = 0x1,
    IIC_M_RX_UNDER_POS = 0,
};

enum IIC_IC_RAW_INTR_STAT_FIELD
{
    IIC_SCL_STUCK_AT_LOW_MASK = 0x4000,
    IIC_SCL_STUCK_AT_LOW_POS = 14,
    IIC_MST_ON_HOLD_MASK = 0x2000,
    IIC_MST_ON_HOLD_POS = 13,
    IIC_RESTART_DET_MASK = 0x1000,
    IIC_RESTART_DET_POS = 12,
    IIC_GEN_CALL_MASK = 0x800,
    IIC_GEN_CALL_POS = 11,
    IIC_START_DET_MASK = 0x400,
    IIC_START_DET_POS = 10,
    IIC_STOP_DET_MASK = 0x200,
    IIC_STOP_DET_POS = 9,
    IIC_ACTIVITY_RAW_MASK = 0x100,
    IIC_ACTIVITY_RAW_POS = 8,
    IIC_RX_DONE_MASK = 0x80,
    IIC_RX_DONE_POS = 7,
    IIC_TX_ABRT_MASK = 0x40,
    IIC_TX_ABRT_POS = 6,
    IIC_RD_REQ_MASK = 0x20,
    IIC_RD_REQ_POS = 5,
    IIC_TX_EMPTY_MASK = 0x10,
    IIC_TX_EMPTY_POS = 4,
    IIC_TX_OVER_MASK = 0x8,
    IIC_TX_OVER_POS = 3,
    IIC_RX_FULL_MASK = 0x4,
    IIC_RX_FULL_POS = 2,
    IIC_RX_OVER_MASK = 0x2,
    IIC_RX_OVER_POS = 1,
    IIC_RX_UNDER_MASK = 0x1,
    IIC_RX_UNDER_POS = 0,
};

enum IIC_IC_RX_TL_FIELD
{
    IIC_RX_TL_MASK = 0xff,
    IIC_RX_TL_POS = 0,
};

enum IIC_IC_TX_TL_FIELD
{
    IIC_TX_TL_MASK = 0xff,
    IIC_TX_TL_POS = 0,
};

enum IIC_IC_CLR_INTR_FIELD
{
    IIC_CLR_INTR_MASK = 0x1,
    IIC_CLR_INTR_POS = 0,
};

enum IIC_IC_CLR_RX_UNDER_FIELD
{
    IIC_CLR_RX_UNDER_MASK = 0x1,
    IIC_CLR_RX_UNDER_POS = 0,
};

enum IIC_IC_CLR_RX_OVER_FIELD
{
    IIC_CLR_RX_OVER_MASK = 0x1,
    IIC_CLR_RX_OVER_POS = 0,
};

enum IIC_IC_CLR_TX_OVER_FIELD
{
    IIC_CLR_TX_OVER_MASK = 0x1,
    IIC_CLR_TX_OVER_POS = 0,
};

enum IIC_IC_CLR_RD_REQ_FIELD
{
    IIC_CLR_RD_REQ_MASK = 0x1,
    IIC_CLR_RD_REQ_POS = 0,
};

enum IIC_IC_CLR_TX_ABRT_FIELD
{
    IIC_CLR_TX_ABRT_MASK = 0x1,
    IIC_CLR_TX_ABRT_POS = 0,
};

enum IIC_IC_CLR_RX_DONE_FIELD
{
    IIC_CLR_RX_DONE_MASK = 0x1,
    IIC_CLR_RX_DONE_POS = 0,
};

enum IIC_IC_CLR_ACTIVITY_FIELD
{
    IIC_CLR_ACTIVITY_MASK = 0x1,
    IIC_CLR_ACTIVITY_POS = 0,
};

enum IIC_IC_CLR_STOP_DET_FIELD
{
    IIC_CLR_STOP_DET_MASK = 0x1,
    IIC_CLR_STOP_DET_POS = 0,
};

enum IIC_IC_CLR_START_DET_FIELD
{
    IIC_CLR_START_DET_MASK = 0x1,
    IIC_CLR_START_DET_POS = 0,
};

enum IIC_IC_CLR_GEN_CALL_FIELD
{
    IIC_CLR_GEN_CALL_MASK = 0x1,
    IIC_CLR_GEN_CALL_POS = 0,
};

enum IIC_IC_ENABLE_FIELD
{
    IIC_ABORT_MASK = 0x2,
    IIC_ABORT_POS = 1,
    IIC_ENABLE_MASK = 0x1,
    IIC_ENABLE_POS = 0,
};

enum IIC_IC_STATUS_FIELD
{
    IIC_SMBUS_ALERT_STATUS_MASK = 0x100000,
    IIC_SMBUS_ALERT_STATUS_POS = 20,
    IIC_SMBUS_SUSPEND_STATUS_MASK = 0x80000,
    IIC_SMBUS_SUSPEND_STATUS_POS = 19,
    IIC_SMBUS_SLAVE_ADDR_RESOLVED_MASK = 0x40000,
    IIC_SMBUS_SLAVE_ADDR_RESOLVED_POS = 18,
    IIC_SMBUS_SLAVE_ADDR_VALID_MASK = 0x20000,
    IIC_SMBUS_SLAVE_ADDR_VALID_POS = 17,
    IIC_SMBUS_QUICK_CMD_BIT_MASK = 0x10000,
    IIC_SMBUS_QUICK_CMD_BIT_POS = 16,
    IIC_SDA_STUCK_NOT_RECOVERED_MASK = 0x800,
    IIC_SDA_STUCK_NOT_RECOVERED_POS = 11,
    IIC_SLV_HOLD_RX_FIFO_FULL_MASK = 0x400,
    IIC_SLV_HOLD_RX_FIFO_FULL_POS = 10,
    IIC_SLV_HOLD_TX_FIFO_EMPTY_MASK = 0x200,
    IIC_SLV_HOLD_TX_FIFO_EMPTY_POS = 9,
    IIC_MST_HOLD_RX_FIFO_FULL_MASK = 0x100,
    IIC_MST_HOLD_RX_FIFO_FULL_POS = 8,
    IIC_MST_HOLD_TX_FIFO_EMPTY_MASK = 0x80,
    IIC_MST_HOLD_TX_FIFO_EMPTY_POS = 7,
    IIC_SLV_ACTIVITY_MASK = 0x40,
    IIC_SLV_ACTIVITY_POS = 6,
    IIC_MST_ACTIVITY_MASK = 0x20,
    IIC_MST_ACTIVITY_POS = 5,
    IIC_RFF_MASK = 0x10,
    IIC_RFF_POS = 4,
    IIC_RFNE_MASK = 0x8,
    IIC_RFNE_POS = 3,
    IIC_TFE_MASK = 0x4,
    IIC_TFE_POS = 2,
    IIC_TFNF_MASK = 0x2,
    IIC_TFNF_POS = 1,
    IIC_ACTIVITY_MASK = 0x1,
    IIC_ACTIVITY_POS = 0,
};

enum IIC_IC_TXFLR_FIELD
{
    IIC_TXFLR_MASK = 0x1f,
    IIC_TXFLR_POS = 0,
};

enum IIC_IC_RXFLR_FIELD
{
    IIC_RXFLR_MASK = 0x1f,
    IIC_RXFLR_POS = 0,
};

enum IIC_IC_SDA_HOLD_FIELD
{
    IIC_IC_SDA_RX_HOLD_MASK = 0xff0000,
    IIC_IC_SDA_RX_HOLD_POS = 16,
    IIC_IC_SDA_TX_HOLD_MASK = 0xffff,
    IIC_IC_SDA_TX_HOLD_POS = 0,
};

enum IIC_IC_TX_ABRT_SOURCE_FIELD
{
    IIC_TX_FLUSH_CNT_MASK = (int)0xff800000L,
    IIC_TX_FLUSH_CNT_POS = 23,
    IIC_ABRT_DEVICE_WRITE_MASK = 0x100000,
    IIC_ABRT_DEVICE_WRITE_POS = 20,
    IIC_ABRT_DEVICE_SLVADDR_NOACK_MASK = 0x80000,
    IIC_ABRT_DEVICE_SLVADDR_NOACK_POS = 19,
    IIC_ABRT_DEVICE_NOACK_MASK = 0x40000,
    IIC_ABRT_DEVICE_NOACK_POS = 18,
    IIC_ABRT_SDA_STUCK_AT_LOW_MASK = 0x20000,
    IIC_ABRT_SDA_STUCK_AT_LOW_POS = 17,
    IIC_ABRT_USER_ABRT_MASK = 0x10000,
    IIC_ABRT_USER_ABRT_POS = 16,
    IIC_ABRT_SLVRD_INTX_MASK = 0x8000,
    IIC_ABRT_SLVRD_INTX_POS = 15,
    IIC_ABRT_SLV_ARBLOST_MASK = 0x4000,
    IIC_ABRT_SLV_ARBLOST_POS = 14,
    IIC_ABRT_SLVFLUSH_TXFIFO_MASK = 0x2000,
    IIC_ABRT_SLVFLUSH_TXFIFO_POS = 13,
    IIC_ARB_LOST_MASK = 0x1000,
    IIC_ARB_LOST_POS = 12,
    IIC_ABRT_MASTER_DIS_MASK = 0x800,
    IIC_ABRT_MASTER_DIS_POS = 11,
    IIC_ABRT_10B_RD_NORSTRT_MASK = 0x400,
    IIC_ABRT_10B_RD_NORSTRT_POS = 10,
    IIC_ABRT_SBYTE_NORSTRT_MASK = 0x200,
    IIC_ABRT_SBYTE_NORSTRT_POS = 9,
    IIC_ABRT_HS_NORSTRT_MASK = 0x100,
    IIC_ABRT_HS_NORSTRT_POS = 8,
    IIC_ABRT_SBYTE_ACKDET_MASK = 0x80,
    IIC_ABRT_SBYTE_ACKDET_POS = 7,
    IIC_ABRT_HS_ACKDET_MASK = 0x40,
    IIC_ABRT_HS_ACKDET_POS = 6,
    IIC_ABRT_GCALL_READ_MASK = 0x20,
    IIC_ABRT_GCALL_READ_POS = 5,
    IIC_ABRT_GCALL_NOACK_MASK = 0x10,
    IIC_ABRT_GCALL_NOACK_POS = 4,
    IIC_ABRT_TXDATA_NOACK_MASK = 0x8,
    IIC_ABRT_TXDATA_NOACK_POS = 3,
    IIC_ABRT_10ADDR2_NOACK_MASK = 0x4,
    IIC_ABRT_10ADDR2_NOACK_POS = 2,
    IIC_ABRT_10ADDR1_NOACK_MASK = 0x2,
    IIC_ABRT_10ADDR1_NOACK_POS = 1,
    IIC_ABRT_7BADDR_NOACK_MASK = 0x1,
    IIC_ABRT_7BADDR_NOACK_POS = 0,
};

enum IIC_IC_SLV_DATA_NACK_ONLY_FIELD
{
    IIC_NACK_MASK = 0x1,
    IIC_NACK_POS = 0,
};

enum IIC_IC_DMA_CR_FIELD
{
    IIC_TDMAE_MASK = 0x2,
    IIC_TDMAE_POS = 1,
    IIC_RDMAE_MASK = 0x1,
    IIC_RDMAE_POS = 0,
};

enum IIC_IC_DMA_TDLR_FIELD
{
    IIC_DMATDL_MASK = 0xf,
    IIC_DMATDL_POS = 0,
};

enum IIC_IC_DMA_RDLR_FIELD
{
    IIC_DMARDL_MASK = 0xf,
    IIC_DMARDL_POS = 0,
};

enum IIC_IC_SDA_SETUP_FIELD
{
    IIC_SDA_SETUP_MASK = 0xff,
    IIC_SDA_SETUP_POS = 0,
};

enum IIC_IC_ACK_GENERAL_CALL_FIELD
{
    IIC_ACK_GEN_CALL_MASK = 0x1,
    IIC_ACK_GEN_CALL_POS = 0,
};

enum IIC_IC_ENABLE_STATUS_FIELD
{
    IIC_SLV_RX_DATA_LOST_MASK = 0x4,
    IIC_SLV_RX_DATA_LOST_POS = 2,
    IIC_SLV_DISABLED_WHILE_BUSY_MASK = 0x2,
    IIC_SLV_DISABLED_WHILE_BUSY_POS = 1,
    IIC_IC_EN_MASK = 0x1,
    IIC_IC_EN_POS = 0,
};

enum IIC_IC_FS_SPKLEN_FIELD
{
    IIC_FS_SPKLEN_MASK = 0xff,
    IIC_FS_SPKLEN_POS = 0,
};

enum IIC_IC_HS_SPKLEN_FIELD
{
    IIC_HS_SPKLEN_MASK = 0xff,
    IIC_HS_SPKLEN_POS = 0,
};

enum IIC_IC_CLR_RESTART_DET_FIELD
{
    IIC_CLR_RESTART_DET_MASK = 0x1,
    IIC_CLR_RESTART_DET_POS = 0,
};


enum IIC_IC_COMP_VERSION_FIELD
{
    IIC_COMP_VERSION_MASK = (int)0xffffffffL,
    IIC_COMP_VERSION_POS = 0,
};

enum IIC_IC_COMP_TYPE_FIELD
{
    IIC_COMP_TYPE_MASK = (int)0xffffffffL,
    IIC_COMP_TYPE_POS = 0,
};

#endif
