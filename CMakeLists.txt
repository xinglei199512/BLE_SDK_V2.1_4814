cmake_minimum_required(VERSION 3.7)
project(bxble C ASM)

include_directories(./)

set(HW_VERSION audio)

#set(CMAKE_VERBOSE_MAKEFILE TRUE)

set(CMAKE_C_USE_RESPONSE_FILE_FOR_OBJECTS 1)
if(CMAKE_C_COMPILER_ID STREQUAL ARMCC)
set(CMAKE_C_FLAGS "-O2 -Ospace -D__MICROLIB --cpu=cortex-m0+ --bss_threshold=0 --c99 --split_sections -g")
set(CMAKE_ASM_FLAGS "--cpu=cortex-m0+ --pd \"__MICROLIB SETA 1\" --thumb -g")
set(CMAKE_EXE_LINKER_FLAGS "--cpu=cortex-m0+ --library_type=microlib --map --symbols --verbose --xref --info any,architecture,exceptions,inline,inputs,libraries,merge,pltgot,sizes,stack,summarysizes,summarystack,tailreorder,totals,unused,unusedsymbols,veneers,veneercallers,veneerpools,visibility,weakrefs --callgraph --datacompressor off ")
set(CMAKE_C_RESPONSE_FILE_LINK_FLAG "--Via=")
set(linkscript_option "--scatter=")
set(partial_link_option "--partial")
set(link_gc_option "--remove")
set(sym_option symdefs)
message(${CMAKE_C_COMPILER_ID})
else()  
set(CMAKE_C_FLAGS "-O2 -Os -mabi=aapcs -mthumb -mcpu=cortex-m0plus -std=c11 -g -ffunction-sections -fdata-sections -fstrict-volatile-bitfields ")
set(CMAKE_ASM_FLAGS "-mthumb -mcpu=cortex-m0plus -std=c99 -g -ffunction-sections -fdata-sections ")
set(CMAKE_EXE_LINKER_FLAGS " --specs=nano.specs --specs=nosys.specs")
set(CMAKE_C_RESPONSE_FILE_LINK_FLAG "-Wl,@")
set(linkscript_option "-T ")
set(partial_link_option "-Wl,-r")
set(link_gc_option "-Wl,--gc-sections")
set(sym_option )
set(CMAKE_EXECUTABLE_SUFFIX ".elf")
set(CMAKE_C_LINK_EXECUTABLE "<CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> -Wl,-Map=<TARGET_BASE>.map <OBJECTS> -lm -o <TARGET> <LINK_LIBRARIES>")
message(${CMAKE_C_COMPILER_ID})
endif()

option(DEBUGGER_ATTACHED_FORCE_OFF "-DDEBUGGER_ATTACHED=0" OFF)
if(DEBUGGER_ATTACHED_FORCE_OFF)
    add_definitions(-DDEBUGGER_ATTACHED=0)
endif()
option(TEST_MODE_CFG "-DTEST_MODE_CFG" OFF)
if(TEST_MODE_CFG)
    add_definitions(-DTEST_MODE_CFG)
endif()
#message(${CMAKE_C_LINK_EXECUTABLE})
#message(${CMAKE_EXECUTABLE_SUFFIX})
function(add_sources)
    set(dst ${ARGV0})
    get_property(srcs GLOBAL PROPERTY ${dst})
    list(REMOVE_ITEM ARGV ${dst})
    foreach(arg ${ARGV})
        list(APPEND srcs ${arg})
    endforeach()
    set_property(GLOBAL PROPERTY ${dst} ${srcs})
endfunction(add_sources)


execute_process(COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/tools/image_tool_v2/JLinkSettings.JLinkScript ${CMAKE_BINARY_DIR}/)
add_library(fw_inc INTERFACE)
add_library(usr_inc INTERFACE)

add_library(inc_00 INTERFACE)
add_library(inc_01 INTERFACE)
set_property(GLOBAL PROPERTY ROM_00_SRCS)
set_property(GLOBAL PROPERTY PLF_00_SRCS)
set_property(GLOBAL PROPERTY USR_SRCS)
set_property(GLOBAL PROPERTY PLF_01_SRCS)

set_property(GLOBAL PROPERTY USR_FLASH_SRCS)
set_property(GLOBAL PROPERTY DTM_FLASH_SRCS)
add_subdirectory(modules)
add_subdirectory(ip)
add_subdirectory(plf)
add_subdirectory(app)



get_property(ROM_00_SRCS_LIST GLOBAL PROPERTY ROM_00_SRCS)
get_property(PLF_00_SRCS_LIST GLOBAL PROPERTY PLF_00_SRCS)
get_property(USR_SRCS_LIST GLOBAL PROPERTY USR_SRCS)
get_property(PLF_01_SRCS_LIST GLOBAL PROPERTY PLF_01_SRCS)

get_property(USR_FLASH_SRCS_LIST GLOBAL PROPERTY USR_FLASH_SRCS)
get_property(DTM_FLASH_SRCS_LIST GLOBAL PROPERTY DTM_FLASH_SRCS)

